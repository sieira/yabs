#! /bin/zsh
if [[ $ZSH_EVAL_CONTEXT == 'toplevel' ]]
then
    echo "Usage:\n  source install"
    exit 1
fi

if [[ "$OSTYPE" == darwin* ]]
then
    brew install coreutils vim 2> /dev/null
    $(brew --prefix coreutils)/bin/gcp --backup=t --suffix=.pre_yabs .zshrc $HOME
    cp -R .yabs $HOME
else
    cp --backup=t --suffix=.pre_yabs .zshrc $HOME
    cp -R .yabs $HOME
fi

source $HOME/.zshrc

check_deps() {
    local dependencies=(git)
    typeset -U dependencies


    if [[ "$OSTYPE" == darwin* ]]
    then
        dependencies+=brew
    fi

    for dep in $dependencies; do
        dep_path="$(command -v $dep)"
        if [[ $? -ne 0 ]]
        then
            echo "$ERROR Yabs depend on $dep which is not on your path"
            exit 1
        fi
        echo "$INFO $dep found in $dep_path"
    done
}

request_install() {
    if [[ "$#" -lt 2 ]]
    then
        echo "$ERROR request_install takes at least two parameters"
        exit 1
    fi

    CONFIRMATION=true

    if [[ -f "$2" ]]
    then
        request_confirmation "Do you want to overwrite $(basename $1) ?"
        CONFIRMATION=$?
    fi
    if [[ $CONFIRMATION -eq 0 ]]
    then
        mkdir -p `dirname $2`
        cp $1 $2
        echo "$OK Copying $1 to $2"
    else
        echo "$INDETERMINATE $2 will not be overriden"
    fi

}

check_deps
request_install .gitconfig ~/.gitconfig
request_install .vimrc ~/.vimrc
request_install .pylintrc ~/.pylintrc
mkdir -p ~/.vim/swp
mkdir -p ~/.vim/undo
clone_github VundleVim/Vundle.vim ~/.vim/bundle/vundle
vim +BundleInstall +qall
