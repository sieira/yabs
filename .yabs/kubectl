#!/bin/zsh
#  =============
#  == kubectl ==
#  =============
#
#  Contains some utilities allowing to ease complex kubectl tasks
#
#  envs:
#
#  functions:
#   - kubectx:
#     Switches kubectl contexts
#   - kubens:
#     Switches kubectl namespaces,
#
#  aliases:

kubens () {
    if [[ "$#" -eq 0 ]]
    then
        CURRENT_NAMESPACE=${$(kubectl config view --minify | grep namespace | tr ":" " ")[2]}

        for namespace in $(kubectl get namespace | sed -e "1d" | awk '{print $1}')
        do
            if [[ $namespace == $CURRENT_NAMESPACE ]]
            then
                echo_bold "ðŸ‘‰ \e[33m$namespace"
            else
                echo $namespace
            fi
        done

        return 0
    fi

    kubectl config set-context --current --namespace=$1 > /dev/null
    kubens
}


kubectx () {
    if [[ "$#" -eq 0 ]]
    then
        CURRENT_CONTEXT=$(kubectl config current-context)

        for context in $(kubectl config get-contexts | sed -e "1d" | sed 's/*/ /' | awk '{print $1}')
        do
            if [[ $context == $CURRENT_CONTEXT ]]
            then
                echo_bold "ðŸ‘‰ \e[33m$context"
            else
                echo $context
            fi
        done

        return 0
    fi

    kubectl config use-context $1 > /dev/null
    kubectx
}
